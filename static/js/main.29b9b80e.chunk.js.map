{"version":3,"sources":["Statistics/Statistics.jsx","FeedbackOptions/FeedbackOptions.jsx","Section/Section.jsx","Statistics/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","type","onClick","Section","title","children","Notofication","App","state","onClickFeedback","e","targetBtn","currentTarget","textContent","toLowerCase","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","className","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAYeA,EAXI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,WCSSC,G,MAfS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,gCACE,wBAAQC,KAAK,SAASC,QAASF,EAA/B,kBAGA,wBAAQC,KAAK,SAASC,QAASF,EAA/B,qBAGA,wBAAQC,KAAK,SAASC,QAASF,EAA/B,sBCFSG,EARC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCDQC,EAHM,WACnB,OAAO,mDCkDMC,E,4MA7CbC,MAAQ,CACNd,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPa,gBAAkB,SAACC,GACjB,IAAMC,EAAYD,EAAEE,cAAcC,YAAYC,cAC9C,EAAKC,UAAS,SAACC,GAAD,sBACXL,EAAYK,EAAUL,GAAa,O,EAGxCM,mBAAqB,WACnB,MAA+B,EAAKT,MACpC,OADA,EAAQd,KAAR,EAAcC,QAAd,EAAuBC,K,EAGzBsB,gCAAkC,WAChC,MAA+B,EAAKV,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OAAOuB,KAAKC,MAAM,KAAO1B,EAAOC,EAAUC,IAAQF,G,4CAEpD,WACE,MAA+B2B,KAAKb,MAA5Bd,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAK0B,UAAU,WAAf,UACE,cAAC,EAAD,CAASlB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBJ,gBAAiBqB,KAAKZ,oBAGzC,cAAC,EAAD,CAASL,MAAM,aAAf,SACGV,EAAOC,EAAUC,IAAQ,EACxB,cAAC,EAAD,IAEA,cAAC,EAAD,CACEF,KAAM2B,KAAKb,MAAMd,KACjBC,QAAS0B,KAAKb,MAAMb,QACpBC,IAAKyB,KAAKb,MAAMZ,IAChBC,MAAOwB,KAAKJ,qBACZnB,mBAAoBuB,KAAKH,6C,GArCrBK,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.29b9b80e.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default FeedbackOptions;\r\n","import React from \"react\";\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nconst Notofication = () => {\r\n  return <p>No feedback given</p>;\r\n};\r\nexport default Notofication;\r\n","import \"./App.css\";\nimport React, { Component } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notofication from \"./Statistics/Notification/Notification\";\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  onClickFeedback = (e) => {\n    const targetBtn = e.currentTarget.textContent.toLowerCase();\n    this.setState((prevState) => ({\n      [targetBtn]: prevState[targetBtn] + 1,\n    }));\n  };\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    return Math.round(100 / (good + neutral + bad)) * good;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"main-div\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions onLeaveFeedback={this.onClickFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {good + neutral + bad === 0 ? (\n            <Notofication />\n          ) : (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}